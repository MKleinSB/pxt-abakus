<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="KxclhBq]!=XI4;+LDWUW" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="yHzpDfZ}vzu3}:i;]to{" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace abakus {" line1="" line2="&#9;export enum anzeigen {" line3="        //% block=&quot;Tropfstein&quot;" line4="        tropfstein = 0," line5="        //% block=&quot;Soroban&quot;" line6="        soroban = 1" line7="    }" line8="" line9="&#9;let anzeige = anzeigen.tropfstein" line10="" line11="&#9;/**" line12="     * Wähle Anzeige" line13="     */" line14="    //% blockId=&quot;waehleAnzeige&quot; block=&quot;wähle Anzeige: %wert&quot;" line15="    export function waehleAnzeige(wert: anzeigen) {" line16="&#9;&#9;anzeige = wert" line17="&#9;}" line18="&#9;" line19="&#9;function zeigeZifferTropfstein(wert: number, spalte: number) {" line20="&#9;    // Ziffer (0..9) in der angegebenen Bildschirm-Spalte (0..4) zeigen:" line21="&#9;" line22="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line23="&#9;    // | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | ungueltig |" line24="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line25="&#9;    // | . | . | . | . | . | # | # | # | # | # |     .     |" line26="&#9;    // | . | . | . | . | # | # | . | # | # | # |     #     |" line27="&#9;    // | . | . | . | # | # | # | . | . | # | # |     .     |" line28="&#9;    // | . | . | # | # | # | # | . | . | . | # |     #     |" line29="&#9;    // | . | # | # | # | # | # | . | . | . | . |     .     |" line30="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line31="&#9;" line32="&#9;    if (spalte &gt;= 0 &amp;&amp; spalte &lt;= 4) { // auf gueltige Spalte kontrollieren" line33="&#9;&#9;    if (wert &gt;= 0 &amp;&amp; wert &lt;= 5) { // fuer 0..5: &quot;Tropfstein&quot; von unten wachsen lassen" line34="&#9;&#9;&#9;    for (let Index = 0; Index &lt;= wert - 1; Index++) {" line35="&#9;&#9;&#9;&#9;    led.plot(spalte, 4 - Index) // benoetigte Steine setzen" line36="&#9;&#9;&#9;    }" line37="&#9;&#9;&#9;    for (let Index2 = 0; Index2 &lt;= 4 - wert; Index2++) {" line38="&#9;&#9;&#9;&#9;    led.unplot(spalte, Index2) // uebrige Steine loeschen" line39="&#9;&#9;&#9;    }" line40="&#9;&#9;    } else if (wert &gt;= 6 &amp;&amp; wert &lt;= 9) { // fuer 6..9: &quot;Tropfstein&quot; von oben wachsen lassen" line41="&#9;&#9;&#9;    for (let Index3 = 0; Index3 &lt;= wert - 6; Index3++) {" line42="&#9;&#9;&#9;&#9;    led.plot(spalte, Index3) // benoetigte Steine setzen" line43="&#9;&#9;&#9;    }" line44="&#9;&#9;&#9;    for (let Index4 = 0; Index4 &lt;= 9 - wert; Index4++) {" line45="&#9;&#9;&#9;&#9;    led.unplot(spalte, 4 - Index4) // uebrige Steine loeschen" line46="&#9;&#9;&#9;    }" line47="&#9;&#9;    } else {" line48="&#9;&#9;&#9;    // keine gueltige Ziffer" line49="&#9;&#9;&#9;    led.unplot(spalte, 0)" line50="&#9;&#9;&#9;    led.plot(spalte, 1)" line51="&#9;&#9;&#9;    led.unplot(spalte, 2)" line52="&#9;&#9;&#9;    led.plot(spalte, 3)" line53="&#9;&#9;&#9;    led.unplot(spalte, 4)" line54="&#9;&#9;    }" line55="        }" line56="    }" line57="&#9;" line58="    function zeigeZifferSoroban(wert: number, spalte: number) {" line59="&#9;    // Ziffer (0..9) in der angegebenen Bildschirm-Spalte (0..4) zeigen:" line60="&#9;" line61="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line62="&#9;    // | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | ungueltig |" line63="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line64="&#9;    // | . | . | . | . | . | # | # | # | # | # |     .     |" line65="&#9;    // | . | # | # | # | # | . | # | # | # | # |     #     |" line66="&#9;    // | . | . | # | # | # | . | . | # | # | # |     .     |" line67="&#9;    // | . | . | . | # | # | . | . | . | # | # |     #     |" line68="&#9;    // | . | . | . | . | # | . | . | . | . | # |     .     |" line69="&#9;    // +---+---+---+---+---+---+---+---+---+---+-----------+" line70="&#9;" line71="&#9;    if (spalte &gt;= 0 &amp;&amp; spalte &lt;= 4) { // auf gueltige Spalte kontrollieren" line72="&#9;&#9;&#9;if (wert &gt; 4) {" line73="&#9;&#9;&#9;&#9;led.plot(spalte, 0) // obersten Stein (5) setzen" line74="&#9;&#9;&#9;&#9;wert = wert - 5 // im unteren Bereich (0 bis 4) weitermachen" line75="&#9;&#9;&#9;} else {" line76="&#9;&#9;&#9;&#9;led.unplot(spalte, 0) // obersten Stein loeschen" line77="&#9;&#9;&#9;}" line78="&#9;&#9;    if (wert &gt;= 0 &amp;&amp; wert &lt;= 4) {" line79="&#9;&#9;&#9;    for (let Index5 = 0; Index5 &lt; wert; Index5++) {" line80="&#9;&#9;&#9;&#9;    led.plot(spalte, Index5 + 1) // benoetigte Steine setzen" line81="&#9;&#9;&#9;    }" line82="                for (let Index6 = 0; Index6 &lt;= 4 - wert; Index6++) {" line83="&#9;&#9;&#9;&#9;    led.unplot(spalte, 4 - Index6 + 1) // uebrige Steine loeschen" line84="&#9;&#9;&#9;    }" line85="&#9;&#9;    } else {" line86="&#9;&#9;&#9;    // keine gueltige Ziffer" line87="&#9;&#9;&#9;    led.unplot(spalte, 0)" line88="&#9;&#9;&#9;    led.plot(spalte, 1)" line89="&#9;&#9;&#9;    led.unplot(spalte, 2)" line90="&#9;&#9;&#9;    led.plot(spalte, 3)" line91="&#9;&#9;&#9;    led.unplot(spalte, 4)" line92="&#9;&#9;    }" line93="        }" line94="    }" line95="&#9;" line96="&#9;/**" line97="     * Zeige eine Ziffer in der angegebenen Spalte an." line98="     */" line99="&#9;//% blockId=&quot;zeigeZiffer&quot; block=&quot;zeige Ziffer: Wert %wert, Spalte %spalte&quot;" line100="    export function zeigeZiffer(wert: number, spalte: number) {" line101="&#9;&#9;if (anzeige == anzeigen.tropfstein) {" line102="&#9;&#9;&#9;zeigeZifferTropfstein(wert, spalte)" line103="&#9;&#9;} else {" line104="&#9;&#9;&#9;zeigeZifferSoroban(wert, spalte)" line105="&#9;&#9;}" line106="&#9;}" line107="&#9;" line108="&#9;/**" line109="     * Zeige eine komplette Zahl an." line110="     */" line111="    //% blockId=&quot;zeigeZahl&quot; block=&quot;zeige Zahl: Wert %wert&quot;" line112="    export function zeigeZahl(wert: number) {" line113="&#9;&#9;let s = wert.toString()" line114="&#9;&#9;if (s.length &gt; 5) { // zu viele Stellen" line115="&#9;&#9;&#9;basic.showString(&quot;#&quot;)" line116="&#9;&#9;} else {" line117="&#9;&#9;&#9;if (s.charCodeAt(0) != 45) { // nicht negativ" line118="&#9;&#9;&#9;&#9;while (s.length &lt; 5) {" line119="&#9;&#9;&#9;&#9;&#9;s = &quot;0&quot; + s // von links mit Nullen auffuellen" line120="&#9;&#9;&#9;&#9;}" line121="&#9;&#9;&#9;} else { // negativ" line122="&#9;&#9;&#9;&#9;let s2 = s.substr(1, s.length) // Vorzeichen entfernen" line123="&#9;&#9;&#9;&#9;while (s2.length &lt; 4) { // Platz fuer Vorzeichen reservieren" line124="&#9;&#9;&#9;&#9;&#9;s2 = &quot;0&quot; + s2 // von links mit Nullen auffuellen" line125="&#9;&#9;&#9;&#9;}" line126="&#9;&#9;&#9;&#9;s = &quot;-&quot; + s2 // Vorzeichen wieder einfuegen" line127="&#9;&#9;&#9;}" line128="    " line129="&#9;&#9;&#9;for (let i = 0; i &lt; s.length; i++) {" line130="&#9;&#9;&#9;&#9;let v = s.charCodeAt(i)" line131="&#9;&#9;&#9;&#9;if (v &gt;= 48 &amp;&amp; v &lt;= 57) { // Ziffer" line132="&#9;&#9;&#9;&#9;&#9;zeigeZiffer(v - 48, i)" line133="&#9;&#9;&#9;&#9;} else if (v == 45) { // Vorzeichen" line134="&#9;&#9;&#9;&#9;&#9;led.plot(i, 2)" line135="&#9;&#9;&#9;&#9;} else if (v == 46) { // Dezimalpunkt" line136="&#9;&#9;&#9;&#9;&#9;led.plot(i, 3)" line137="&#9;&#9;&#9;&#9;}" line138="&#9;&#9;&#9;}" line139="&#9;&#9;}" line140="&#9;}" line141="}" numlines="142"></mutation></block></statement></block></xml>